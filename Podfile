# Autogenerated by PodBuilder (https://github.com/Subito-it/PodBuilder)
# Any change to this file should be done on PodBuilder/Podfile

# Uncomment the next line to define a global platform for your project
platform :ios, '15.0'

# Comment the next line if you don't want to use dynamic frameworks
use_frameworks!

target 'fusen' do

  # Pods for fusen
  pod 'FirebaseCore', :path => 'PodBuilder/Prebuilt/FirebaseCore' # pb<FirebaseAnalytics>
  pod 'FirebaseInstallations', :path => 'PodBuilder/Prebuilt/FirebaseInstallations' # pb<FirebaseAnalytics>
  pod 'GoogleUtilities/AppDelegateSwizzler', :path => 'PodBuilder/Prebuilt/GoogleUtilities' # pb<FirebaseAnalytics>
  pod 'nanopb', :path => 'PodBuilder/Prebuilt/nanopb' # pb<FirebaseAnalytics>
  pod 'FirebaseCoreDiagnostics', :path => 'PodBuilder/Prebuilt/FirebaseCoreDiagnostics' # pb<FirebaseAnalytics>
  pod 'FirebaseCoreInternal', :path => 'PodBuilder/Prebuilt/FirebaseCoreInternal' # pb<FirebaseAnalytics>
  pod 'PromisesObjC', :path => 'PodBuilder/Prebuilt/PromisesObjC' # pb<FirebaseAnalytics>
  pod 'GoogleDataTransport', :path => 'PodBuilder/Prebuilt/GoogleDataTransport' # pb<FirebaseAnalytics>
  pod 'FirebaseAnalytics'
  pod 'GoogleUtilities/AppDelegateSwizzler', :path => 'PodBuilder/Prebuilt/GoogleUtilities' # pb<FirebaseAuth>
  pod 'GTMSessionFetcher/Core', :path => 'PodBuilder/Prebuilt/GTMSessionFetcher' # pb<FirebaseAuth>
  pod 'nanopb', :path => 'PodBuilder/Prebuilt/nanopb' # pb<FirebaseAuth>
  pod 'FirebaseAuth', :path => 'PodBuilder/Prebuilt/FirebaseAuth' # pb<FirebaseAuth>
  pod 'GoogleUtilities/AppDelegateSwizzler', :path => 'PodBuilder/Prebuilt/GoogleUtilities' # pb<FirebaseCrashlytics>
  pod 'nanopb', :path => 'PodBuilder/Prebuilt/nanopb' # pb<FirebaseCrashlytics>
  pod 'FirebaseCrashlytics', :path => 'PodBuilder/Prebuilt/FirebaseCrashlytics' # pb<FirebaseCrashlytics>
  pod 'leveldb-library', :path => 'PodBuilder/Prebuilt/leveldb-library' # pb<FirebaseFirestore>
  pod 'GoogleUtilities/AppDelegateSwizzler', :path => 'PodBuilder/Prebuilt/GoogleUtilities' # pb<FirebaseFirestore>
  pod 'nanopb', :path => 'PodBuilder/Prebuilt/nanopb' # pb<FirebaseFirestore>
  pod 'FirebaseFirestore', :path => 'PodBuilder/Prebuilt/FirebaseFirestore' # pb<FirebaseFirestore>
  pod 'GoogleUtilities/AppDelegateSwizzler', :path => 'PodBuilder/Prebuilt/GoogleUtilities' # pb<FirebaseFirestoreSwift>
  pod 'nanopb', :path => 'PodBuilder/Prebuilt/nanopb' # pb<FirebaseFirestoreSwift>
  pod 'FirebaseFirestoreSwift', :path => 'PodBuilder/Prebuilt/FirebaseFirestoreSwift' # pb<FirebaseFirestoreSwift>
  pod 'FirebaseStorageInternal', :path => 'PodBuilder/Prebuilt/FirebaseStorageInternal' # pb<FirebaseStorage>
  pod 'FirebaseAppCheckInterop', :path => 'PodBuilder/Prebuilt/FirebaseAppCheckInterop' # pb<FirebaseStorage>
  pod 'FirebaseAuthInterop', :path => 'PodBuilder/Prebuilt/FirebaseAuthInterop' # pb<FirebaseStorage>
  pod 'FirebaseCoreExtension', :path => 'PodBuilder/Prebuilt/FirebaseCoreExtension' # pb<FirebaseStorage>
  pod 'GoogleUtilities/AppDelegateSwizzler', :path => 'PodBuilder/Prebuilt/GoogleUtilities' # pb<FirebaseStorage>
  pod 'nanopb', :path => 'PodBuilder/Prebuilt/nanopb' # pb<FirebaseStorage>
  pod 'FirebaseStorage', :path => 'PodBuilder/Prebuilt/FirebaseStorage' # pb<FirebaseStorage>
  pod 'FirebaseABTesting', :path => 'PodBuilder/Prebuilt/FirebaseABTesting' # pb<FirebaseRemoteConfig>
  pod 'GoogleUtilities/AppDelegateSwizzler', :path => 'PodBuilder/Prebuilt/GoogleUtilities' # pb<FirebaseRemoteConfig>
  pod 'nanopb', :path => 'PodBuilder/Prebuilt/nanopb' # pb<FirebaseRemoteConfig>
  pod 'FirebaseRemoteConfig', :path => 'PodBuilder/Prebuilt/FirebaseRemoteConfig' # pb<FirebaseRemoteConfig>
  pod 'FirebaseMessagingInterop', :path => 'PodBuilder/Prebuilt/FirebaseMessagingInterop' # pb<FirebaseFunctions>
  pod 'FirebaseSharedSwift', :path => 'PodBuilder/Prebuilt/FirebaseSharedSwift' # pb<FirebaseFunctions>
  pod 'GoogleUtilities/AppDelegateSwizzler', :path => 'PodBuilder/Prebuilt/GoogleUtilities' # pb<FirebaseFunctions>
  pod 'nanopb', :path => 'PodBuilder/Prebuilt/nanopb' # pb<FirebaseFunctions>
  pod 'FirebaseFunctions', :path => 'PodBuilder/Prebuilt/FirebaseFunctions' # pb<FirebaseFunctions>
  pod 'GoogleUtilities/AppDelegateSwizzler', :path => 'PodBuilder/Prebuilt/GoogleUtilities' # pb<FirebaseAppCheck>
  pod 'nanopb', :path => 'PodBuilder/Prebuilt/nanopb' # pb<FirebaseAppCheck>
  pod 'FirebaseAppCheck', :path => 'PodBuilder/Prebuilt/FirebaseAppCheck' # pb<FirebaseAppCheck>
  pod 'SVProgressHUD', :path => 'PodBuilder/Prebuilt/SVProgressHUD' # pb<SVProgressHUD>
  pod 'SwiftLint'
  pod 'AppAuth', :path => 'PodBuilder/Prebuilt/AppAuth' # pb<GoogleSignIn>
  pod 'GTMAppAuth', :path => 'PodBuilder/Prebuilt/GTMAppAuth' # pb<GoogleSignIn>
  pod 'GoogleSignIn', :path => 'PodBuilder/Prebuilt/GoogleSignIn' # pb<GoogleSignIn>
  pod 'GoogleToolboxForMac/DebugUtils', :path => 'PodBuilder/Prebuilt/GoogleToolboxForMac' # pb<GoogleMLKit/TextRecognitionJapanese>
  pod 'GoogleUtilities/AppDelegateSwizzler', :path => 'PodBuilder/Prebuilt/GoogleUtilities' # pb<GoogleMLKit/TextRecognitionJapanese>
  pod 'GoogleUtilitiesComponents', :path => 'PodBuilder/Prebuilt/GoogleUtilitiesComponents' # pb<GoogleMLKit/TextRecognitionJapanese>
  pod 'Protobuf', :path => 'PodBuilder/Prebuilt/Protobuf' # pb<GoogleMLKit/TextRecognitionJapanese>
  pod 'nanopb', :path => 'PodBuilder/Prebuilt/nanopb' # pb<GoogleMLKit/TextRecognitionJapanese>
  pod 'GoogleMLKit/TextRecognitionJapanese'
  pod 'CropViewController', :path => 'PodBuilder/Prebuilt/CropViewController' # pb<CropViewController>
  pod 'Kingfisher', :path => 'PodBuilder/Prebuilt/Kingfisher' # pb<Kingfisher>
  pod 'LicensePlist'

  target 'fusenTests' do
    inherit! :search_paths
    # Pods for testing
  end

  target 'fusenUITests' do
    # Pods for testing
  end

end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      if `uname -m`.strip == 'arm64'
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      end
    end
  end
end

pre_install do |installer|
  Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_duplicate_framework_and_library_names) {}
  require 'pod_builder/podfile/pre_actions_swizzles'
   
end
